/**
 * 已看面试题组，随机抽样1组题目，已抽过的不再抽，抽过的题目组序号存放在JSON文件中
 * 抽过的题目以键值对的形式存储。键为组序号，值为完成情况不佳的题目及其完成情况 （diffIndex总分10分， 0 为掌握的 10为完全不掌握的）、题目类型组成的对象，如：
 *    [1: {"Vue的底层原理": {"diffIndex":[5], type:['Vue','JS'],"done": false}}]
 * 根据上述完成情况，统计各种类型题目的未完成题目数，未统计到的类型计为1，得出不同类型题目的掌握情况
 * 回归题目   每回归一题新增题目完成分，连续三次diffIndex 0分的从JSON题库中标记为已掌握，不再进入回归队列中
 *    1. 随机回归
 *        1.1 从所有完成不佳的题目中按输入的题目数目(n) 随机抽取n个
 *    2. 按类型回归
 *        2.1 从所有完成不佳的题目中按输入的题目数目(n) 和 题目类型(type) 随机抽取n个type类型题目
 *    3. 按难度回归
 *        3.1 从所有完成不佳的题目中按输入的题目数目(n) 和 题目难度(diffIndex) 范围(range) 随机抽取n个设定难度(diffIndex)左右各range分的题目
 *    4. 回归函数   Input: n, type, diffIndex, range    Output: n个题目
 *  **/
const questionType = [
  "网络",
  "HTML",
  "CSS",
  "Vue",
  "JS",
  "TS",
  "Node",
  "算法",
  "前端安全",
  "性能优化",
  "工具",
  "小程序",
  "移动端",
  "跨端技术",
  "工程化"
];
questionType;
